웹개발3 day18
(javascript day06)
date -> 클로저 -> 예외처리 -> set -> map 

1. 클로저(Closure)
   함수와 그 함수가 선언된 스코프(범위) 사이의 관계를 나타낸다
   함수가 다른 함수 내부에서 정의되었을 경우 그 함수 내부에서만 유효한 변수를 참고하고 있는 함수를 의미한다
   외부 함수의 변수에 접근할 수 있으며 외부함수가 실행을 마쳐도 해당 함수에 접근 할 수 있다

   내부함수(클로저)가 외부 함수의 변수를 참조할 수 있다
   클로저가 외부함수의 실행이 끝나더라도 외부 함수의 변수에 접근할 수 있다
   캡슐화, 은닉을 구현할 때 주로 사용된다

   변수(variable) : 데이터를 저장하고 관리하기 위한 메모리 공간
         다양한 유형의 데이터 저장 가능
         프로그램 내에서 데이터를 조작하고 공유하는 데 사용됨
   클로저   : 함수와 함수가 정의된 스코프 사이의 관계를 나타냄
      클로저는 함수가 외부 스코프의 변수를 참조하고 있을 때 발생함
      함수가 외부 스코프에서 선언된 변수에 대한 접근 권한을 가지고 있을 때 클로저가 된다


2. 예외처리
   코드 실행 중에 발생할 수 있는 오류나 예외상황을 처리하고 관리하는 것을 의미

   try ~ catch문
      try{
         //예외 발생 가능한 코드
      }catch (error) {
         //예외 처리 코드
      }
   
   try ~ catch ~ finally문
      try{
         //예외 발생 가능한 코드
      }catch (error) {
         //예외 처리 코드
      }finally {
         //예외 발생 유무에 상관없이 항상 실행되는 코드
      }

   throw문
      사용자 지정 예외를 발생시킬 수 있다

      throw new Error(메시지);

   사용자 정의 예외
      사용자가 특정 상황에 맞는 예외를 발생시킬 수 있도록 사용자 정의 예외 클래스를 만드는것을 의미
      Error 클래스를 확장하거나 재정의하여 만들 수 있다      
 
   에러객체
      에러가 발생하면 자바스크립트는 에러 상세 내용이 담긴 객체를 생성한다
      catch 블록으로 객체를 인수로 전달한다
      
      name    : 에러이름
      message : 에러 상세 내용을 담고 있는 문자 메시지
      stack     : 비표준 프로퍼티, 현재 호출 스택(디버깅 목적으로 사용)

3. map
   객체와 유사하지만 맵은 키에 다양한 자료형을 허용한다는 차이가 있다

   new Map()      맵 생성
   map.set(key, value)   key를 이용해 value를 저장
   map.get(key)      key에 해당하는 값을 반환, key가 존재하지 않으면 undefined 를 반환
   map.has(key)      key가 존재하면 true, 존재하지않으면 false를 반환
   map.delete(key)      key에 해당하는 값을 삭제
   map.clear()      맵 안의 모든 요소를 제거
   map.size      요소의 개수를 반환
